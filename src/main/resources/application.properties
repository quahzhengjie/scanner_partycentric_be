# Application Name
spring.application.name=KYC Case Management System

# Server configuration
server.port=8081
server.servlet.context-path=/api

# Database configuration (MySQL)
spring.datasource.url=jdbc:mysql://localhost:3306/opa_database?useSSL=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=toor
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA properties
# IMPORTANT: Use 'validate' instead of 'update' when using Flyway
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
# Use csob_ prefix for our tables
spring.flyway.table=csob_flyway_schema_history

# File upload properties
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
file.upload.directory=${user.home}/kyc-documents

# Jackson properties
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.time-zone=UTC

# JWT Configuration
jwt.secret=${JWT_SECRET:0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef}
jwt.expiration=86400000
jwt.refresh.expiration=604800000

# CORS Configuration
cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000,http://localhost:3001}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
cors.max-age=3600

# Demo Mode Configuration
app.demo-mode=${DEMO_MODE:true}

# Scanner Configuration (Fallback - Primary config will be in database)
# These are only used if database config is not available
naps2.exe.path=${NAPS2_PATH:C:/Program Files/NAPS2/NAPS2.Console.exe}
scan.temp.directory=${SCAN_TEMP_DIR:${java.io.tmpdir}/kyc-scans}
scan.timeout.seconds=300
scan.max.retries=3

# Async Configuration for scanning
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=5
spring.task.execution.pool.queue-capacity=100

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=systemConfig,scannerConfig,documentRequirements,entityRoles

# Actuator Configuration (for monitoring)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate=ERROR
logging.level.com.kyc=DEBUG
# Also log your scanner package if different
logging.level.com.bkb.scanner=DEBUG
# Log SQL parameter values (useful for debugging)
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

management.server.port=8082
management.endpoints.web.base-path=/

# Add more detailed security logging
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
logging.level.org.springframework.security.web.access.intercept.FilterSecurityInterceptor=DEBUG

# --- ENVIRONMENT-SPECIFIC OVERRIDES ---
# You can override these with environment variables or in application-{profile}.properties

# For development, you might want:
# spring.jpa.show-sql=true
# logging.level.com.kyc=DEBUG

# For production, you should set:
# spring.jpa.show-sql=false
# jwt.secret=${JWT_SECRET}  # From environment variable
# spring.datasource.password=${DB_PASSWORD}  # From environment variable